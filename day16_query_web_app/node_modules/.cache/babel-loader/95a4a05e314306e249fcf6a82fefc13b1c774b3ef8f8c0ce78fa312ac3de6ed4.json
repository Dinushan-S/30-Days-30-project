{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\selva\\\\Desktop\\\\react learn\\\\30 Days project\\\\day16_query_web_app\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport logo from './logo.svg';\nimport './App.css';\nimport { useQuery } from 'react-query';\nimport { Header } from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst fetchData = async () => {\n  const response = await fetch(\"https://jsonplaceholder.typicode.com/todos/1\");\n  const data = await response.json();\n  return data;\n};\nfunction App() {\n  _s();\n  const [data, isLoading, error] = useQuery(\"todos\", fetchData);\n  if (isLoading) return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: \"Loading...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 25\n  }, this);\n  // if (error) return <div>Error : {error.message}</div>\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"React Query\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container mt-5\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"React Query App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n            className: \"card-title\",\n            children: \"Data from JSONPlaceholder API\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"card-text\",\n            children: JSON.stringify(data)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"5WtJHE+FHZjhGb1nj/B9wru9ffg=\", false, function () {\n  return [useQuery];\n});\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["logo","useQuery","Header","jsxDEV","_jsxDEV","fetchData","response","fetch","data","json","App","_s","isLoading","error","children","fileName","_jsxFileName","lineNumber","columnNumber","title","className","JSON","stringify","_c","$RefreshReg$"],"sources":["C:/Users/selva/Desktop/react learn/30 Days project/day16_query_web_app/src/App.js"],"sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport { useQuery } from 'react-query';\nimport { Header } from './Header';\n\nconst fetchData = async () => {\n  const response = await fetch(\"https://jsonplaceholder.typicode.com/todos/1\");\n  const data = await response.json();\n  return data;\n}\n\nfunction App() {\n  const [data, isLoading, error] = useQuery(\"todos\", fetchData)\n\n  if (isLoading) return <div>Loading...</div>\n  // if (error) return <div>Error : {error.message}</div>\n  return (\n    <div>\n      <Header title=\"React Query\" />\n      <div className='container mt-5'>\n        <h1>React Query App</h1>\n        <div className='card'>\n          <div className='card-body'>\n            <h5 className='card-title'>Data from JSONPlaceholder API</h5>\n            <p className='card-text'>{JSON.stringify(data)}</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,YAAY;AAC7B,OAAO,WAAW;AAClB,SAASC,QAAQ,QAAQ,aAAa;AACtC,SAASC,MAAM,QAAQ,UAAU;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;EAC5B,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8CAA8C,CAAC;EAC5E,MAAMC,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAI,CAAC,CAAC;EAClC,OAAOD,IAAI;AACb,CAAC;AAED,SAASE,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACH,IAAI,EAAEI,SAAS,EAAEC,KAAK,CAAC,GAAGZ,QAAQ,CAAC,OAAO,EAAEI,SAAS,CAAC;EAE7D,IAAIO,SAAS,EAAE,oBAAOR,OAAA;IAAAU,QAAA,EAAK;EAAU;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAK,CAAC;EAC3C;EACA,oBACEd,OAAA;IAAAU,QAAA,gBACEV,OAAA,CAACF,MAAM;MAACiB,KAAK,EAAC;IAAa;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC9Bd,OAAA;MAAKgB,SAAS,EAAC,gBAAgB;MAAAN,QAAA,gBAC7BV,OAAA;QAAAU,QAAA,EAAI;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACxBd,OAAA;QAAKgB,SAAS,EAAC,MAAM;QAAAN,QAAA,eACnBV,OAAA;UAAKgB,SAAS,EAAC,WAAW;UAAAN,QAAA,gBACxBV,OAAA;YAAIgB,SAAS,EAAC,YAAY;YAAAN,QAAA,EAAC;UAA6B;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC7Dd,OAAA;YAAGgB,SAAS,EAAC,WAAW;YAAAN,QAAA,EAAEO,IAAI,CAACC,SAAS,CAACd,IAAI;UAAC;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAChD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV;AAACP,EAAA,CAnBQD,GAAG;EAAA,QACuBT,QAAQ;AAAA;AAAAsB,EAAA,GADlCb,GAAG;AAqBZ,eAAeA,GAAG;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}